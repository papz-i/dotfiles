set ratios 1:2:3

# Settings
set icons true 
set drawbox true
set ignorecase true
set hidden true
set scrolloff 10

# Custom Commands
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) nvim "$f";;
        *jpg|*jpeg|*png) nsxiv "$f";;
        *pdf) zathura "$f" ;;
        *) xdg-open "$f" ;;
	esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  touch $ans
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo touch $ans
}}

cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

# Trash

cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    # extract the substring from start of string up to delimiter.
    # this is the first "element" of the string.
    file=${files%%;*}

    trash-put "$(basename "$file")"
    # if there's only one element left, set `files` to an empty string.
    # this causes us to exit this `while` loop.
    # else, we delete the first "element" of the string from files, and move onto the next.
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}

# Jump File or Directory
# Dependencies: https://github.com/junegunn/fzf
cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}

# Remove Keybinding
map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f
map a 
map l
map r
map t

# Keymaps
map . set hidden! 
map <enter> open
map tt shell

map md mkdir
map mf mkfile
map smf sudomkfile
map rr rename
map RR reload
map ch chmod
map dd cut
map pp paste

# Archive Mappings
map az zip
map at tar
map ag targz
map ab targz
map au unarchive

# Trash
map dfd trash
map dal clear_trash
map rfd restore_trash

# Search
map f fzf_jump

# REFERENCES
# https://github.com/ericmurphyxyz/archrice/blob/master/.config/lf/lfrc
# https://github.com/BrodieRobertson/dotfiles/blob/master/config/lf/lfrc
# Viewer: https://github.com/cirala/lfimg
